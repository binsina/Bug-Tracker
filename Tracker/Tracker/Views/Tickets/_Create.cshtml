@model Tracker.Models.Ticket

@Html.AntiForgeryToken()


<div class="modal-header">
    <button type="button" class="close" data-dismiss="modal">&times;</button>
    <h4 class="modal-title" style="background-color:aquamarine !important">Create</h4>

    <div class="modal-body">



        @using (Html.BeginForm("Create", "Tickets", FormMethod.Post))
        {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })



            @Html.HiddenFor(m => m.ProjectId)

            <div class="form-group">
                @Html.LabelFor(model => model.FileUrl, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <input type="file" name="Image" id="fileUpload" onchange="loadFile(event)" class="form-control" required />
                    @*@Html.EditorFor(model => model.MediaUrl, new { htmlAttributes = new { @class = "form-control" } })*@
                    @Html.ValidationMessageFor(model => model.FileUrl, "", new { @class = "text-danger" })
                    <div style="max-height:200px; max-width:200px">
                        @if (!string.IsNullOrWhiteSpace("Image"))
                        {
                            <h5><strong>Picture Preview</strong></h5>
                            <img class="img-responsive" id="output" />
                        }
                    </div>
                </div>
            </div>
            <hr />
            <br />
                        <br />
                        <br />
                                        <br />
                                        <br />



                                        <div class="form-group">
                                            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-10">
                                                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                                            </div>
                                        </div>


                                        <div class="form-group">
                                            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-10">
                                                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.TicketTypeId, "Ticket Type", htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-10">
                                                @Html.DropDownList("TicketTypeId", null, htmlAttributes: new { @class = "form-control" })
                                                @Html.ValidationMessageFor(model => model.TicketTypeId, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            <div class="col-md-offset-2 col-md-10">
                                                <input type="submit" value="Create" class="btn btn-success btn-lg" />
                                            </div>
                                        </div>

                                        <hr>
        }


    </div>
</div>




@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script type="text/javascript">

        tinymce.init({
            selector: '#Description'
        });
    </script>



}


